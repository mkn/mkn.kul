kul
===

C++ Kommon usage library

Minimal cross platform C++ wrapper for threading/process management/io/logging/signal handling and stack walking.


Supported Architectures/Operating Systems:
	x86_64 / Linux
	x86_64 / BSD
	x86_64 / Windows
	ARMv7  / Linux
	ARMv7  / Windows

Requires:
	Windows: Visual Studio 2013+
	Unix   : gcc 5.0 (or equivalent)

How to use:
view usage.cpp

License: BSD

Environment variables

Key             KLOG
Type            number or string
Default         0 / NON
Description - Enable logging with level given
	Values include
		0 = NON
		1 = INF
		2 = ERR
		3 = DBG
    4 = OTH
    5 = TRC
Used by macros KOUT and KLOG : see inc/usage.hpp
        KLOG >= 3 is disabled with -DNDEBUG


Key             KUL_GIT_CO
Type            string
Default         ""
Description - Add string to git clone as arguments

Key             KUL_SVN_CO
Type            string
Default         ""
Description - Add string to svn checkout as arguments


Switches - OSX is considered BSD for swiches unless otherwise noted

Key             _MKN_KUL_DISABLE_KLOG_DEF_
Type            bool
Default         undefined
OS              all
Description     if defined, or set to 1, do not register KLOG* macros

Key             _MKN_KUL_MAX_PATH_
Type            size_t
Default         MAX_PATH/PATH_MAX - or 1024 if not found
OS              all
Description     Max array length for filesystem interactions


Key             __MKN_KUL_LOG_FRMT__
Type            string
Default         "[%M]: %T - %D : %F fn(%N)#%L - %S"
OS              all
Description
Logging format in format view:
	%M = Mode - INF/ERR/DBG
	%T = Thread ID
	%D = DateTime - uses __MKN_KUL_LOG_DATE_FRMT__
	%F = File
	%N = Function
	%L = Line
	%S = String

Key             __MKN_KUL_LOG_DATE_FRMT__
Type            string
Default         "%Y-%m-%d-%H:%M:%S:%i"
OS              all
Description
Logging DateTime format, reference: http://en.cppreference.com/w/cpp/chrono/c/strftime
"%i" is custom for milliseconds, method strftime is used for all other

Key             __MKN_KUL_THREAD_SPAWN_WAIT__
Type            number
Default
    nix/bsd     5000000
    win         0
OS              all
Description
Used in thread queues. The amount of time in nanoseconds waited after launching a thread. Threads launched too quickly can cause issues on nix platforms, bsd assumed similar.

Key             __MKN_KUL_PROC_BLOCK_ERR__
Type            flag
Default         disabled
OS              nix/bsd
Description
Turns on error checking for creating new processes when running -
    fcntl(fd, F_SETFL, O_NONBLOCK);
Can be an issue being on when running many processes rapidly.

Key             __MKN_KUL_PROC_DUP_RETRY__
Type            number
Default         3
OS              nix/bsd
Description
Allows N retries for "dup(fileDescriptor") calls in forked process.

Key             __MKN_KUL_SYS_DLOPEN__
Type            text
Default         RTLD_NOW|RTLD_GLOBAL
OS              nix/bsd
Description
Flags for dlopen, see https://linux.die.net/man/3/dlopen

Key             _MKN_KUL_PROC_LOOP_NSLEEP_
Type            number
Default         undefined
OS              nix/bsd
Description
Nanosecond sleep while reading running processes pipe output, if defined and greater than 0


Key             _MKN_KUL_COMPILED_LIB_
Type            flag
Default         disabled
OS              all
Description
Utilized in the mkn.yaml file for this project, optionally puts some functions in source files rather than headers

Key             KASSERT_REPLACE_ASSERT
Type            flag
Default         disabled
OS              all
Description     replace "assert" with KASSERT, for assert stacktracing (in theory) //




With options

1. google.sparsehash

   Uses google.sparsehash for mkn::kul::hash::set and mkn::kul::hash::map classes

